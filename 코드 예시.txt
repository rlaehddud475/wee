document.getElementById('reservation-form').addEventListener('submit', function(event) {
    event.preventDefault(); // 폼 제출을 막습니다.

    // 입력 필드에서 값 가져오기
    const name = document.getElementById('name').value;
    const date = document.getElementById('date').value;
    const time = document.getElementById('time').value;

    // 서버에 예약 정보를 전송합니다 (모의)
    fetch('/reserve', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ name, date, time })
    })
    .then(response => response.json())
    .then(data => {
        // 서버가 성공적으로 예약을 처리한 경우
        if (data.success) {
            // 예약 목록에 추가
            const tableBody = document.getElementById('reservation-table').getElementsByTagName('tbody')[0];
            const newRow = tableBody.insertRow();

            const cell1 = newRow.insertCell(0);
            const cell2 = newRow.insertCell(1);
            const cell3 = newRow.insertCell(2);

            cell1.textContent = name;
            cell2.textContent = date;
            cell3.textContent = time;

            // 모달 창을 띄웁니다
            const modal = document.getElementById('myModal');
            modal.style.display = 'block';

            // 모달 닫기 버튼
            const span = document.getElementsByClassName('close')[0];
            span.onclick = function() {
                modal.style.display = 'none';
            }

            // 모달 외부 클릭 시 모달 닫기
            window.onclick = function(event) {
                if (event.target === modal) {
                    modal.style.display = 'none';
                }
            }

            // 입력 필드 초기화
            document.getElementById('reservation-form').reset();
        } else {
            // 서버가 실패를 응답한 경우
            alert('예약 처리에 실패했습니다. 다시 시도해 주세요.');
        }
    })
    .catch(error => {
        console.error('예약 처리 중 오류 발생:', error);
        alert('예약 처리 중 오류가 발생했습니다. 다시 시도해 주세요.');
    });
});

 <div id="myModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>예약 완료</h2>
            <p>예약이 성공적으로 완료되었습니다!</p>
        </div>
    </div>

    <script src="script.js"></script>
const express = require('express');
const bodyParser = require('body-parser');

const app = express();
const port = 3000;

// JSON 파싱 미들웨어
app.use(bodyParser.json());

// 정적 파일 제공
app.use(express.static('public'));

// 예약 엔드포인트
app.post('/reserve', (req, res) => {
    // 예약 정보 처리 (모의 처리)
    const { name, date, time } = req.body;

    // 성공적인 처리 응답
    if (name && date && time) {
        res.json({ success: true });
    } else {
        res.json({ success: false });
    }
});

app.listen(port, () => {
    console.log(`서버가 http://localhost:${port}에서 실행 중입니다.`);
});

-------------------------------------------------------------------------

결제
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>결제 화면</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f4f4f4;
        }
        .container {
            max-width: 600px;
            margin: auto;
            padding: 20px;
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        h1 {
            text-align: center;
            margin-bottom: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
        }
        input[type="text"], input[type="number"], input[type="email"], select {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            display: block;
            width: 100%;
            padding: 10px;
            background-color: #28a745;
            border: none;
            color: #fff;
            font-size: 16px;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #218838;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>결제 정보 입력</h1>
        <form id="payment-form">
            <div class="form-group">
                <label for="name">이름:</label>
                <input type="text" id="name" name="name" required>
            </div>
            <div class="form-group">
                <label for="email">이메일:</label>
                <input type="email" id="email" name="email" required>
            </div>
            <div class="form-group">
                <label for="amount">결제 금액 (USD):</label>
                <input type="number" id="amount" name="amount" min="0" step="0.01" required>
            </div>
            <div class="form-group">
                <label for="card-number">신용카드 번호:</label>
                <input type="text" id="card-number" name="card-number" placeholder="1234 5678 9012 3456" required>
            </div>
            <div class="form-group">
                <label for="expiry-date">만료일:</label>
                <input type="text" id="expiry-date" name="expiry-date" placeholder="MM/YY" required>
            </div>
            <div class="form-group">
                <label for="cvv">CVV:</label>
                <input type="text" id="cvv" name="cvv" placeholder="123" required>
            </div>
            <button type="submit">결제하기</button>
        </form>
    </div>

    <script src="payment.js"></script>
</body>
</html>

document.getElementById('payment-form').addEventListener('submit', function(event) {
    event.preventDefault(); // 폼 제출을 막습니다.

    // 입력 필드에서 값 가져오기
    const name = document.getElementById('name').value;
    const email = document.getElementById('email').value;
    const amount = document.getElementById('amount').value;
    const cardNumber = document.getElementById('card-number').value;
    const expiryDate = document.getElementById('expiry-date').value;
    const cvv = document.getElementById('cvv').value;

    // 결제 정보 객체 생성
    const paymentData = {
        name: name,
        email: email,
        amount: parseFloat(amount),
        cardNumber: cardNumber,
        expiryDate: expiryDate,
        cvv: cvv
    };

    // 결제 처리 (여기는 모의 처리)
    processPayment(paymentData)
        .then(response => {
            if (response.success) {
                alert('결제가 성공적으로 완료되었습니다!');
                // 폼 초기화
                document.getElementById('payment-form').reset();
            } else {
                alert('결제 처리에 실패했습니다. 다시 시도해 주세요.');
            }
        })
        .catch(error => {
            console.error('결제 처리 중 오류 발생:', error);
            alert('결제 처리 중 오류가 발생했습니다. 다시 시도해 주세요.');
        });
});

// 모의 결제 처리 함수
function processPayment(data) {
    return new Promise((resolve, reject) => {
        // 이 함수는 실제 결제 처리 서버와의 통신을 모의합니다.
        // 성공적인 결제 처리 응답을 가정합니다.
        setTimeout(() => {
            resolve({ success: true });
        }, 1000); // 1초 후에 응답
    });
}

----------------------------------------------------------------------------------
날씨
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>날씨 정보</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f4f4f4;
        }
        .container {
            max-width: 600px;
            margin: auto;
            padding: 20px;
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        h1 {
            text-align: center;
            margin-bottom: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
        }
        input[type="text"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            display: block;
            width: 100%;
            padding: 10px;
            background-color: #007bff;
            border: none;
            color: #fff;
            font-size: 16px;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #0056b3;
        }
        #weather-info {
            margin-top: 20px;
        }
        .weather-item {
            margin-bottom: 15px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>날씨 정보</h1>
        <form id="weather-form">
            <div class="form-group">
                <label for="city">도시 이름:</label>
                <input type="text" id="city" name="city" placeholder="예: Seoul" required>
            </div>
            <button type="submit">날씨 조회</button>
        </form>

        <div id="weather-info">
            <!-- 날씨 정보가 여기에 표시됩니다 -->
        </div>
    </div>

    <script>
        document.getElementById('weather-form').addEventListener('submit', function(event) {
            event.preventDefault(); // 폼 제출을 막습니다.

            const city = document.getElementById('city').value;
            const apiKey = 'YOUR_API_KEY'; // OpenWeatherMap API 키를 입력하세요
            const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric&lang=kr`;

            fetch(url)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('날씨 정보를 가져오는 데 실패했습니다.');
                    }
                    return response.json();
                })
                .then(data => {
                    const weatherInfo = document.getElementById('weather-info');
                    weatherInfo.innerHTML = `
                        <div class="weather-item">
                            <h2>${data.name}, ${data.sys.country}</h2>
                            <p>기온: ${data.main.temp} °C</p>
                            <p>날씨: ${data.weather[0].description}</p>
                            <p>습도: ${data.main.humidity}%</p>
                            <p>풍속: ${data.wind.speed} m/s</p>
                        </div>
                    `;
                })
                .catch(error => {
                    const weatherInfo = document.getElementById('weather-info');
                    weatherInfo.innerHTML = `<p style="color: red;">${error.message}</p>`;
                });
        });
    </script>
</body>
</html>

-----------------------------------------------------------------------------------
바베큐 옵션
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>바베큐 옵션 선택</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f4f4f4;
        }
        .container {
            max-width: 600px;
            margin: auto;
            padding: 20px;
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        h1 {
            text-align: center;
            margin-bottom: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
        }
        select, input[type="checkbox"], input[type="radio"] {
            margin-right: 10px;
        }
        .options-group {
            margin-bottom: 20px;
        }
        .options-group label {
            display: inline-block;
            margin-right: 10px;
        }
        button {
            display: block;
            width: 100%;
            padding: 10px;
            background-color: #007bff;
            border: none;
            color: #fff;
            font-size: 16px;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #0056b3;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>바베큐 옵션 선택</h1>
        <form id="bbq-form">
            <!-- 고기 종류 -->
            <div class="form-group">
                <label>고기 종류:</label>
                <div class="options-group">
                    <label><input type="checkbox" name="meat" value="beef"> 소고기</label>
                    <label><input type="checkbox" name="meat" value="chicken"> 닭고기</label>
                    <label><input type="checkbox" name="meat" value="pork"> 돼지고기</label>
                    <label><input type="checkbox" name="meat" value="lamb"> 양고기</label>
                </div>
            </div>

            <!-- 사이드 디시 -->
            <div class="form-group">
                <label>사이드 디시:</label>
                <div class="options-group">
                    <label><input type="checkbox" name="side" value="salad"> 샐러드</label>
                    <label><input type="checkbox" name="side" value="fries"> 감자튀김</label>
                    <label><input type="checkbox" name="side" value="corn"> 옥수수</label>
                    <label><input type="checkbox" name="side" value="bread"> 빵</label>
                </div>
            </div>

            <!-- 음료 -->
            <div class="form-group">
                <label>음료:</label>
                <select name="beverage" id="beverage">
                    <option value="">선택하세요</option>
                    <option value="soda">탄산음료</option>
                    <option value="beer">맥주</option>
                    <option value="water">물</option>
                    <option value="juice">주스</option>
                </select>
            </div>

            <!-- 추가 요청사항 -->
            <div class="form-group">
                <label for="comments">추가 요청사항:</label>
                <textarea id="comments" name="comments" rows="4" placeholder="기타 요청사항이나 특이 사항을 입력하세요."></textarea>
            </div>

            <button type="submit">제출하기</button>
        </form>
    </div>

    <script>
        document.getElementById('bbq-form').addEventListener('submit', function(event) {
            event.preventDefault(); // 폼 제출을 막습니다.

            const formData = new FormData(event.target);
            const selectedOptions = {};

            formData.forEach((value, key) => {
                if (!selectedOptions[key]) {
                    selectedOptions[key] = [];
                }
                selectedOptions[key].push(value);
            });

            console.log('선택된 옵션:', selectedOptions);
            alert('폼이 제출되었습니다. 콘솔에서 선택된 옵션을 확인하세요.');
        });
    </script>
</body>
</html>

-------------------------------------------------------------------------------------
서버연결 가능 한 버전들 
결제
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>결제 화면</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f4f4f4;
        }
        .container {
            max-width: 600px;
            margin: auto;
            padding: 20px;
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        h1 {
            text-align: center;
            margin-bottom: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
        }
        input[type="text"], input[type="number"], input[type="email"], select {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            display: block;
            width: 100%;
            padding: 10px;
            background-color: #007bff;
            border: none;
            color: #fff;
            font-size: 16px;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #0056b3;
        }
        .response-message {
            margin-top: 20px;
            font-size: 16px;
        }
        .error {
            color: red;
        }
        .success {
            color: green;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>결제 정보 입력</h1>
        <form id="payment-form">
            <div class="form-group">
                <label for="name">이름:</label>
                <input type="text" id="name" name="name" required>
            </div>
            <div class="form-group">
                <label for="email">이메일:</label>
                <input type="email" id="email" name="email" required>
            </div>
            <div class="form-group">
                <label for="amount">결제 금액 (USD):</label>
                <input type="number" id="amount" name="amount" min="0" step="0.01" required>
            </div>
            <div class="form-group">
                <label for="card-number">신용카드 번호:</label>
                <input type="text" id="card-number" name="card-number" placeholder="1234 5678 9012 3456" required>
            </div>
            <div class="form-group">
                <label for="expiry-date">만료일:</label>
                <input type="text" id="expiry-date" name="expiry-date" placeholder="MM/YY" required>
            </div>
            <div class="form-group">
                <label for="cvv">CVV:</label>
                <input type="text" id="cvv" name="cvv" placeholder="123" required>
            </div>
            <button type="submit">결제하기</button>
        </form>

        <div id="response-message" class="response-message"></div>
    </div>

    <script>
        document.getElementById('payment-form').addEventListener('submit', function(event) {
            event.preventDefault(); // 폼 제출을 막습니다.

            // 입력 필드에서 값 가져오기
            const name = document.getElementById('name').value;
            const email = document.getElementById('email').value;
            const amount = document.getElementById('amount').value;
            const cardNumber = document.getElementById('card-number').value;
            const expiryDate = document.getElementById('expiry-date').value;
            const cvv = document.getElementById('cvv').value;

            // 결제 정보 객체 생성
            const paymentData = {
                name: name,
                email: email,
                amount: parseFloat(amount),
                cardNumber: cardNumber,
                expiryDate: expiryDate,
                cvv: cvv
            };

            // 서버에 결제 정보 전송
            fetch('https://your-server-endpoint.com/process-payment', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(paymentData)
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('결제 처리에 실패했습니다.');
                }
                return response.json();
            })
            .then(data => {
                // 서버 응답에 따른 메시지 표시
                const responseMessage = document.getElementById('response-message');
                if (data.success) {
                    responseMessage.textContent = '결제가 성공적으로 완료되었습니다!';
                    responseMessage.className = 'response-message success';
                } else {
                    responseMessage.textContent = '결제 처리에 실패했습니다. 다시 시도해 주세요.';
                    responseMessage.className = 'response-message error';
                }
            })
            .catch(error => {
                const responseMessage = document.getElementById('response-message');
                responseMessage.textContent = '결제 처리 중 오류가 발생했습니다: ' + error.message;
                responseMessage.className = 'response-message error';
            });
        });
    </script>
</body>
</html>
-------------------------------------------------------------------------------------
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>예약 화면</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f4f4f4;
        }
        .container {
            max-width: 600px;
            margin: auto;
            padding: 20px;
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        h1 {
            text-align: center;
            margin-bottom: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
        }
        input[type="text"], input[type="date"], input[type="email"], select {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            display: block;
            width: 100%;
            padding: 10px;
            background-color: #007bff;
            border: none;
            color: #fff;
            font-size: 16px;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #0056b3;
        }
        .response-message {
            margin-top: 20px;
            font-size: 16px;
        }
        .error {
            color: red;
        }
        .success {
            color: green;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>예약 정보 입력</h1>
        <form id="reservation-form">
            <div class="form-group">
                <label for="name">이름:</label>
                <input type="text" id="name" name="name" required>
            </div>
            <div class="form-group">
                <label for="email">이메일:</label>
                <input type="email" id="email" name="email" required>
            </div>
            <div class="form-group">
                <label for="date">예약 날짜:</label>
                <input type="date" id="date" name="date" required>
            </div>
            <div class="form-group">
                <label for="time">예약 시간:</label>
                <input type="text" id="time" name="time" placeholder="HH:MM" required>
            </div>
            <div class="form-group">
                <label for="guests">인원 수:</label>
                <select id="guests" name="guests">
                    <option value="1">1명</option>
                    <option value="2">2명</option>
                    <option value="3">3명</option>
                    <option value="4">4명</option>
                    <option value="5">5명</option>
                    <option value="6">6명</option>
                    <option value="7">7명</option>
                    <option value="8">8명</option>
                </select>
            </div>
            <button type="submit">예약하기</button>
        </form>

        <div id="response-message" class="response-message"></div>
    </div>

    <script>
        document.getElementById('reservation-form').addEventListener('submit', function(event) {
            event.preventDefault(); // 폼 제출을 막습니다.

            // 입력 필드에서 값 가져오기
            const name = document.getElementById('name').value;
            const email = document.getElementById('email').value;
            const date = document.getElementById('date').value;
            const time = document.getElementById('time').value;
            const guests = document.getElementById('guests').value;

            // 예약 정보 객체 생성
            const reservationData = {
                name: name,
                email: email,
                date: date,
                time: time,
                guests: guests
            };

            // 서버에 예약 정보 전송
            fetch('https://your-server-endpoint.com/reservation', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(reservationData)
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('예약 처리에 실패했습니다.');
                }
                return response.json();
            })
            .then(data => {
                // 서버 응답에 따른 메시지 표시
                const responseMessage = document.getElementById('response-message');
                if (data.success) {
                    responseMessage.textContent = '예약이 성공적으로 완료되었습니다!';
                    responseMessage.className = 'response-message success';
                } else {
                    responseMessage.textContent = '예약 처리에 실패했습니다. 다시 시도해 주세요.';
                    responseMessage.className = 'response-message error';
                }
            })
            .catch(error => {
                const responseMessage = document.getElementById('response-message');
                responseMessage.textContent = '예약 처리 중 오류가 발생했습니다: ' + error.message;
                responseMessage.className = 'response-message error';
            });
        });
    </script>
</body>
</html>
--------------------------------------------------------------------------------------
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>날씨 정보</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f4f4f4;
        }
        .container {
            max-width: 600px;
            margin: auto;
            padding: 20px;
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        h1 {
            text-align: center;
            margin-bottom: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
        }
        input[type="text"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            display: block;
            width: 100%;
            padding: 10px;
            background-color: #007bff;
            border: none;
            color: #fff;
            font-size: 16px;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #0056b3;
        }
        .weather-info {
            margin-top: 20px;
            font-size: 16px;
        }
        .error {
            color: red;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>날씨 정보 검색</h1>
        <div class="form-group">
            <label for="city">도시:</label>
            <input type="text" id="city" name="city" placeholder="도시 이름을 입력하세요" required>
        </div>
        <button id="get-weather">날씨 조회하기</button>

        <div id="weather-info" class="weather-info"></div>
    </div>

    <script>
        document.getElementById('get-weather').addEventListener('click', function() {
            const city = document.getElementById('city').value;
            const apiKey = 'YOUR_API_KEY'; // OpenWeatherMap API 키를 여기에 입력하세요.
            const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;

            fetch(apiUrl)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('날씨 정보를 가져오는 데 실패했습니다.');
                    }
                    return response.json();
                })
                .then(data => {
                    const weatherInfo = document.getElementById('weather-info');
                    weatherInfo.innerHTML = `
                        <h2>${data.name}</h2>
                        <p>날씨: ${data.weather[0].description}</p>
                        <p>온도: ${data.main.temp}°C</p>
                        <p>습도: ${data.main.humidity}%</p>
                        <p>풍속: ${data.wind.speed} m/s</p>
                    `;
                    weatherInfo.className = 'weather-info';
                })
                .catch(error => {
                    const weatherInfo = document.getElementById('weather-info');
                    weatherInfo.innerHTML = `<p class="error">${error.message}</p>`;
                    weatherInfo.className = 'weather-info error';
                });
        });
    </script>
</body>
</html>

-------------------------------------------------------------------------------------
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>예약 및 바베큐 옵션 선택</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f4f4f4;
        }
        .container {
            max-width: 600px;
            margin: auto;
            padding: 20px;
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        h1 {
            text-align: center;
            margin-bottom: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
        }
        input[type="text"], input[type="date"], input[type="email"], select {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            display: block;
            width: 100%;
            padding: 10px;
            background-color: #007bff;
            border: none;
            color: #fff;
            font-size: 16px;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #0056b3;
        }
        .response-message {
            margin-top: 20px;
            font-size: 16px;
        }
        .error {
            color: red;
        }
        .success {
            color: green;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>예약 및 바베큐 옵션 선택</h1>
        <form id="reservation-form">
            <div class="form-group">
                <label for="name">이름:</label>
                <input type="text" id="name" name="name" required>
            </div>
            <div class="form-group">
                <label for="email">이메일:</label>
                <input type="email" id="email" name="email" required>
            </div>
            <div class="form-group">
                <label for="date">예약 날짜:</label>
                <input type="date" id="date" name="date" required>
            </div>
            <div class="form-group">
                <label for="time">예약 시간:</label>
                <input type="text" id="time" name="time" placeholder="HH:MM" required>
            </div>
            <div class="form-group">
                <label for="guests">인원 수:</label>
                <select id="guests" name="guests">
                    <option value="1">1명</option>
                    <option value="2">2명</option>
                    <option value="3">3명</option>
                    <option value="4">4명</option>
                    <option value="5">5명</option>
                    <option value="6">6명</option>
                    <option value="7">7명</option>
                    <option value="8">8명</option>
                </select>
            </div>
            <div class="form-group">
                <label for="bbq">바베큐 옵션:</label>
                <select id="bbq" name="bbq">
                    <option value="none">없음</option>
                    <option value="basic">기본 바베큐</option>
                    <option value="deluxe">디럭스 바베큐</option>
                </select>
            </div>
            <button type="submit">예약하기</button>
        </form>

        <div id="response-message" class="response-message"></div>
    </div>

    <script>
        document.getElementById('reservation-form').addEventListener('submit', function(event) {
            event.preventDefault(); // 폼 제출을 막습니다.

            // 입력 필드에서 값 가져오기
            const name = document.getElementById('name').value;
            const email = document.getElementById('email').value;
            const date = document.getElementById('date').value;
            const time = document.getElementById('time').value;
            const guests = document.getElementById('guests').value;
            const bbq = document.getElementById('bbq').value;

            // 예약 정보 객체 생성
            const reservationData = {
                name: name,
                email: email,
                date: date,
                time: time,
                guests: guests,
                bbq: bbq
            };

            // 서버에 예약 정보 전송
            fetch('https://your-server-endpoint.com/reservation', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(reservationData)
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('예약 처리에 실패했습니다.');
                }
                return response.json();
            })
            .then(data => {
                // 서버 응답에 따른 메시지 표시
                const responseMessage = document.getElementById('response-message');
                if (data.success) {
                    responseMessage.textContent = '예약이 성공적으로 완료되었습니다!';
                    responseMessage.className = 'response-message success';
                } else {
                    responseMessage.textContent = '예약 처리에 실패했습니다. 다시 시도해 주세요.';
                    responseMessage.className = 'response-message error';
                }
            })
            .catch(error => {
                const responseMessage = document.getElementById('response-message');
                responseMessage.textContent = '예약 처리 중 오류가 발생했습니다: ' + error.message;
                responseMessage.className = 'response-message error';
            });
        });
    </script>
</body>
</html>
---------------------------------------------------------------------------------
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>결제 화면</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f4f4f4;
        }
        .container {
            max-width: 600px;
            margin: auto;
            padding: 20px;
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        h1 {
            text-align: center;
            margin-bottom: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
        }
        input[type="text"], input[type="number"], input[type="email"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            display: block;
            width: 100%;
            padding: 10px;
            background-color: #007bff;
            border: none;
            color: #fff;
            font-size: 16px;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #0056b3;
        }
        .response-message {
            margin-top: 20px;
            font-size: 16px;
        }
        .error {
            color: red;
        }
        .success {
            color: green;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>결제 정보 입력</h1>
        <form id="payment-form">
            <div class="form-group">
                <label for="card-number">카드 번호:</label>
                <input type="text" id="card-number" name="card-number" required>
            </div>
            <div class="form-group">
                <label for="expiry-date">유효 기간 (MM/YY):</label>
                <input type="text" id="expiry-date" name="expiry-date" required>
            </div>
            <div class="form-group">
                <label for="cvv">CVV:</label>
                <input type="text" id="cvv" name="cvv" required>
            </div>
            <div class="form-group">
                <label for="amount">결제 금액:</label>
                <input type="number" id="amount" name="amount" required>
            </div>
            <button type="submit">결제하기</button>
        </form>

        <div id="response-message" class="response-message"></div>
    </div>

    <script>
        document.getElementById('payment-form').addEventListener('submit', function(event) {
            event.preventDefault(); // 폼 제출을 막습니다.

            // 입력 필드에서 값 가져오기
            const cardNumber = document.getElementById('card-number').value;
            const expiryDate = document.getElementById('expiry-date').value;
            const cvv = document.getElementById('cvv').value;
            const amount = document.getElementById('amount').value;

            // 결제 정보 객체 생성
            const paymentData = {
                cardNumber: cardNumber,
                expiryDate: expiryDate,
                cvv: cvv,
                amount: amount
            };

            // 서버에 결제 정보 전송
            const xhr = new XMLHttpRequest();
            xhr.open('POST', 'https://your-payment-server-endpoint.com/pay', true);
            xhr.setRequestHeader('Content-Type', 'application/json');

            xhr.onload = function() {
                const responseMessage = document.getElementById('response-message');
                if (xhr.status >= 200 && xhr.status < 300) {
                    // 서버 응답 처리
                    const response = JSON.parse(xhr.responseText);
                    if (response.success) {
                        responseMessage.textContent = '결제가 성공적으로 완료되었습니다!';
                        responseMessage.className = 'response-message success';
                    } else {
                        responseMessage.textContent = '결제 처리에 실패했습니다. 다시 시도해 주세요.';
                        responseMessage.className = 'response-message error';
                    }
                } else {
                    responseMessage.textContent = '결제 처리 중 오류가 발생했습니다.';
                    responseMessage.className = 'response-message error';
                }
            };

            xhr.onerror = function() {
                const responseMessage = document.getElementById('response-message');
                responseMessage.textContent = '결제 요청에 실패했습니다.';
                responseMessage.className = 'response-message error';
            };

            xhr.send(JSON.stringify(paymentData));
        });
    </script>
</body>
</html>

----------------------------------------------------------------------------------
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>예약 메인 화면</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f4f4f4;
        }
        .container {
            max-width: 600px;
            margin: auto;
            padding: 20px;
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        h1 {
            text-align: center;
            margin-bottom: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
        }
        input[type="text"], input[type="date"], input[type="number"], select {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            display: block;
            width: 100%;
            padding: 10px;
            background-color: #007bff;
            border: none;
            color: #fff;
            font-size: 16px;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #0056b3;
        }
        .response-message {
            margin-top: 20px;
            font-size: 16px;
        }
        .error {
            color: red;
        }
        .success {
            color: green;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>예약하기</h1>
        <form id="reservation-form">
            <div class="form-group">
                <label for="name">이름:</label>
                <input type="text" id="name" name="name" required>
            </div>
            <div class="form-group">
                <label for="email">이메일:</label>
                <input type="email" id="email" name="email" required>
            </div>
            <div class="form-group">
                <label for="date">예약 날짜:</label>
                <input type="date" id="date" name="date" required>
            </div>
            <div class="form-group">
                <label for="people">인원 수:</label>
                <input type="number" id="people" name="people" min="1" required>
            </div>
            <div class="form-group">
                <label for="bbq">바베큐 옵션:</label>
                <select id="bbq" name="bbq">
                    <option value="none">없음</option>
                    <option value="standard">기본</option>
                    <option value="deluxe">디럭스</option>
                </select>
            </div>
            <button type="submit">예약하기</button>
        </form>

        <div id="response-message" class="response-message"></div>
    </div>

    <script>
        document.getElementById('reservation-form').addEventListener('submit', function(event) {
            event.preventDefault(); // 폼 제출을 막습니다.

            // 입력 필드에서 값 가져오기
            const name = document.getElementById('name').value;
            const email = document.getElementById('email').value;
            const date = document.getElementById('date').value;
            const people = document.getElementById('people').value;
            const bbq = document.getElementById('bbq').value;

            // 예약 정보 객체 생성
            const reservationData = {
                name: name,
                email: email,
                date: date,
                people: people,
                bbq: bbq
            };

            // 서버에 예약 정보 전송
            const xhr = new XMLHttpRequest();
            xhr.open('POST', 'https://your-server-endpoint.com/reserve', true);
            xhr.setRequestHeader('Content-Type', 'application/json');

            xhr.onload = function() {
                const responseMessage = document.getElementById('response-message');
                if (xhr.status >= 200 && xhr.status < 300) {
                    // 서버 응답 처리
                    const response = JSON.parse(xhr.responseText);
                    if (response.success) {
                        responseMessage.textContent = '예약이 성공적으로 완료되었습니다!';
                        responseMessage.className = 'response-message success';
                    } else {
                        responseMessage.textContent = '예약 처리에 실패했습니다. 다시 시도해 주세요.';
                        responseMessage.className = 'response-message error';
                    }
                } else {
                    responseMessage.textContent = '예약 처리 중 오류가 발생했습니다.';
                    responseMessage.className = 'response-message error';
                }
            };

            xhr.onerror = function() {
                const responseMessage = document.getElementById('response-message');
                responseMessage.textContent = '예약 요청에 실패했습니다.';
                responseMessage.className = 'response-message error';
            };

            xhr.send(JSON.stringify(reservationData));
        });
    </script>
</body>
</html>

----------------------------------------------------------------------------------------
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>예약 및 결제</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f4f4f4;
        }
        .container {
            max-width: 600px;
            margin: auto;
            padding: 20px;
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        h1 {
            text-align: center;
            margin-bottom: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
        }
        input[type="text"], input[type="date"], input[type="number"], input[type="email"], select {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            display: block;
            width: 100%;
            padding: 10px;
            background-color: #007bff;
            border: none;
            color: #fff;
            font-size: 16px;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #0056b3;
        }
        .response-message {
            margin-top: 20px;
            font-size: 16px;
        }
        .error {
            color: red;
        }
        .success {
            color: green;
        }
        .hidden {
            display: none;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>예약 및 결제</h1>

        <!-- 예약 폼 -->
        <div id="reservation-section">
            <h2>예약하기</h2>
            <form id="reservation-form">
                <div class="form-group">
                    <label for="name">이름:</label>
                    <input type="text" id="name" name="name" required>
                </div>
                <div class="form-group">
                    <label for="email">이메일:</label>
                    <input type="email" id="email" name="email" required>
                </div>
                <div class="form-group">
                    <label for="date">예약 날짜:</label>
                    <input type="date" id="date" name="date" required>
                </div>
                <div class="form-group">
                    <label for="people">인원 수:</label>
                    <input type="number" id="people" name="people" min="1" required>
                </div>
                <div class="form-group">
                    <label for="bbq">바베큐 옵션:</label>
                    <select id="bbq" name="bbq">
                        <option value="none">없음</option>
                        <option value="standard">기본</option>
                        <option value="deluxe">디럭스</option>
                    </select>
                </div>
                <button type="submit">다음 단계: 결제하기</button>
            </form>
        </div>

        <!-- 결제 폼 -->
        <div id="payment-section" class="hidden">
            <h2>결제하기</h2>
            <form id="payment-form">
                <div class="form-group">
                    <label for="card-number">카드 번호:</label>
                    <input type="text" id="card-number" name="card-number" required>
                </div>
                <div class="form-group">
                    <label for="card-expiry">유효 기간:</label>
                    <input type="text" id="card-expiry" name="card-expiry" required>
                </div>
                <div class="form-group">
                    <label for="card-cvc">CVC:</label>
                    <input type="text" id="card-cvc" name="card-cvc" required>
                </div>
                <button type="submit">결제하기</button>
            </form>
        </div>

        <!-- 결과 메시지 -->
        <div id="response-message" class="response-message"></div>
    </div>

    <script>
        document.getElementById('reservation-form').addEventListener('submit', function(event) {
            event.preventDefault(); // 폼 제출을 막습니다.

            // 예약 정보 가져오기
            const name = document.getElementById('name').value;
            const email = document.getElementById('email').value;
            const date = document.getElementById('date').value;
            const people = document.getElementById('people').value;
            const bbq = document.getElementById('bbq').value;

            // 예약 정보 객체 생성
            const reservationData = {
                name: name,
                email: email,
                date: date,
                people: people,
                bbq: bbq
            };

            // 서버에 예약 정보 전송
            const xhr = new XMLHttpRequest();
            xhr.open('POST', 'https://your-server-endpoint.com/reserve', true);
            xhr.setRequestHeader('Content-Type', 'application/json');

            xhr.onload = function() {
                const responseMessage = document.getElementById('response-message');
                if (xhr.status >= 200 && xhr.status < 300) {
                    const response = JSON.parse(xhr.responseText);
                    if (response.success) {
                        // 예약 성공 시 결제 섹션 표시
                        document.getElementById('reservation-section').classList.add('hidden');
                        document.getElementById('payment-section').classList.remove('hidden');
                    } else {
                        responseMessage.textContent = '예약 처리에 실패했습니다. 다시 시도해 주세요.';
                        responseMessage.className = 'response-message error';
                    }
                } else {
                    responseMessage.textContent = '예약 처리 중 오류가 발생했습니다.';
                    responseMessage.className = 'response-message error';
                }
            };

            xhr.onerror = function() {
                const responseMessage = document.getElementById('response-message');
                responseMessage.textContent = '예약 요청에 실패했습니다.';
                responseMessage.className = 'response-message error';
            };

            xhr.send(JSON.stringify(reservationData));
        });

        document.getElementById('payment-form').addEventListener('submit', function(event) {
            event.preventDefault(); // 폼 제출을 막습니다.

            // 결제 정보 가져오기
            const cardNumber = document.getElementById('card-number').value;
            const cardExpiry = document.getElementById('card-expiry').value;
            const cardCvc = document.getElementById('card-cvc').value;

            // 결제 정보 객체 생성
            const paymentData = {
                cardNumber: cardNumber,
                cardExpiry: cardExpiry,
                cardCvc: cardCvc
            };

            // 서버에 결제 정보 전송
            const xhr = new XMLHttpRequest();
            xhr.open('POST', 'https://your-server-endpoint.com/pay', true);
            xhr.setRequestHeader('Content-Type', 'application/json');

            xhr.onload = function() {
                const responseMessage = document.getElementById('response-message');
                if (xhr.status >= 200 && xhr.status < 300) {
                    const response = JSON.parse(xhr.responseText);
                    if (response.success) {
                        responseMessage.textContent = '결제가 성공적으로 완료되었습니다!';
                        responseMessage.className = 'response-message success';

                        // 예약 완료 메시지 추가
                        const reservationMessage = document.createElement('p');
                        reservationMessage.textContent = '예약이 성공적으로 완료되었습니다!';
                        reservationMessage.className = 'response-message success';
                        responseMessage.appendChild(reservationMessage);

                        // 결제 및 예약 섹션 숨기기
                        document.getElementById('payment-section').classList.add('hidden');
                        document.getElementById('reservation-section').classList.add('hidden');
                    } else {
                        responseMessage.textContent = '결제 처리에 실패했습니다. 다시 시도해 주세요.';
                        responseMessage.className = 'response-message error';
                    }
                } else {
                    responseMessage.textContent = '결제 처리 중 오류가 발생했습니다.';
                    responseMessage.className = 'response-message error';
                }
            };

            xhr.onerror = function() {
                const responseMessage = document.getElementById('response-message');
                responseMessage.textContent = '결제 요청에 실패했습니다.';
                responseMessage.className = 'response-message error';
            };

            xhr.send(JSON.stringify(paymentData));
        });
    </script>
</body>
</html>